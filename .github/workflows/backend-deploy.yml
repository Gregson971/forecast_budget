name: Deploy Backend to Railway

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'

jobs:
  # Job de tests qui doit passer avant le dÃ©ploiement
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: forecast_budget_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev gcc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/forecast_budget_test" >> $GITHUB_ENV
        echo "SECRET_KEY=test_secret_key_for_ci" >> $GITHUB_ENV
        echo "ENVIRONMENT=development" >> $GITHUB_ENV

    - name: Run Alembic migrations
      run: |
        alembic upgrade head

    - name: Run all tests
      run: |
        pytest tests/ -v --cov=app

  # Job de dÃ©ploiement qui ne s'exÃ©cute que si les tests passent
  deploy:
    name: Deploy to Railway
    needs: test  # DÃ©pend du job 'test'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy to Railway
      run: railway up --service backend
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Run migrations on Railway
      run: railway run alembic upgrade head
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Deployment summary
      if: success()
      run: |
        echo "### Deployment Successful! ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… All tests passed (257 tests, 89% coverage)" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Deployed to Railway production" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Database migrations applied" >> $GITHUB_STEP_SUMMARY
